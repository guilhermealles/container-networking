#+TITLE: Container Networking LabBook
#+AUTHOR: Guilherme Rezende Alles
#+STARTUP: overview indent

* Introduction
This repository contains experiments for the course of Computer System
Performance Analysis (CMP223). I will be documenting the experimental
process in this LabBook.
* Objectives
The objective of this work is to evaluate the network overhead
introduced by applying container technologies to high-performance
computing (HPC) applications. This work is built as a follow up to
/"Assessing the Computation and Communication Overhead of Linux
Containers for HPC Applications"/, which indicate that network
overhead do exist and needs to be studied more closely, especially
with respect to Docker containers.

As of results, I expect that, by applying the concepts and techniques
described in Rad Jain's "/The Art of Computer System Performance
Analysis/", I will be able to derive a clear, reproducible workload
that provides information on how much the virtualization of the
network stack affects network performance.
* Workload
The objective of this study is to measure the overhead that is
introduced by container technologies in an HPC infrastructure. More
specifically, so, I want to measure the networking performance of the
platform in which HPC applications will be executed in the future,
/without having to assume any specific application/.

With this restriction and objectives in mind, I believe my best
approach is to use the [[https://gitlab.inria.fr/simgrid/platform-calibration/tree/master][platform calibration]] project, which is used to
obtain network metrics that can be used in the configuration of a
[[http://simgrid.gforge.inria.fr/][SimGrid]] environment. SimGrid is a tool that is used to simulate the
execution of applications in computer clusters (it also includes SMPI,
which is an implementation of MPI designed for network
simulations). The SimGrid and SMPI platforms were introduced by
prof. Lucas Schnorr, in the /Introduction to High-Performance
Computing/ course.

By using the /platform calibration/ as the workload for my
experiments, I expect to be able to obtain timings that are as close
to the real world as possible. Executing them on both native and
virtualized environments should give me enough information to work
with in this project.
** TODO Add the operations that are profiled
